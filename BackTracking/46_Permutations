class Solution {
    public List<List<Integer>> permute(int[] nums) {
       List<List<Integer>>ans = new ArrayList<>();
       backtrack(nums,ans,0);
       return ans;

        
    }
    void backtrack(int[]nums,List<List<Integer>>ans,int start){
       if(start==nums.length){
       List<Integer>temp = new ArrayList<>();
       for(int i:nums)
       temp.add(i);
       ans.add(temp);
       }
       else{
           for(int i =start;i<nums.length;i++){
               swap(i,start,nums);
               backtrack(nums,ans,start+1);
               swap(i,start,nums);
           }
       }
    }
    void swap(int i , int j, int[]nums){
        int t = nums[i];
        nums[i]=nums[j];
        nums[j]=t;
    }
}